{"remainingRequest":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/node_modules/babel-loader/lib/index.js!/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/src/utils/api.js","dependencies":[{"path":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/src/utils/api.js","mtime":1625467519760},{"path":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7Ci8q5Y2V54us5byV55SoZWxlbWVudC11aeS4reeahE1lc3NhZ2XvvIjop4FlbGVtZW50LXVp5a6Y572R77yM5Y+K5YW255So5rOV77yJKi8KCmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJzsKaW1wb3J0IHJvdXRlciBmcm9tICcuLi9yb3V0ZXInOyAvL2F4aW9z5Lit55qE5ZON5bqU5oum5oiq5Zmo77yMc3VjY2Vzc+WSjGVycm9y5piv5pyN5Yqh56uv5ZON5bqU55qE5pWw5o2uCgovKnN1Y2Nlc3PkuI3mmK/mnI3liqHnq6/ov5Tlm57nmoTmlbDmja7vvIxzdWNjZXNzLmRhdGHmiY3mmK/mnI3liqHnq6/ov5Tlm57nmoRqc29u5pWw5o2uKi8KCi8qc3VjY2Vzcy5zdGF0dXPmmK9odHRw55qEc3RhdHVz77yMc3VjY2Vzcy5kYXRhLnN0YXR1c+aYr+iHquWumuS5ieeahFJlc3BCZWFu5Lit55qEc3RhdHVzKi8KCmF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHN1Y2Nlc3MpIHsKICBpZiAoc3VjY2Vzcy5zdGF0dXMgJiYgc3VjY2Vzcy5zdGF0dXMgPT0gMjAwICYmIHN1Y2Nlc3MuZGF0YS5zdGF0dXMgPT0gNTAwKSB7CiAgICAvKuihqOekuuWwhlJlc3BCZWFu5Lit55qEbXNn5pi+56S65Ye65p2lKi8KICAgIE1lc3NhZ2UuZXJyb3IoewogICAgICBtZXNzYWdlOiBzdWNjZXNzLmRhdGEubXNnCiAgICB9KTsKICAgIHJldHVybjsKICB9CgogIGlmIChzdWNjZXNzLmRhdGEubXNnKSB7CiAgICBNZXNzYWdlLnN1Y2Nlc3MoewogICAgICBtZXNzYWdlOiBzdWNjZXNzLmRhdGEubXNnCiAgICB9KTsKICB9CgogIHJldHVybiBzdWNjZXNzLmRhdGE7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIGlmIChlcnJvci5yZXNwb25zZS5zdGF0dXMgPT0gNTA0IHx8IGVycm9yLnJlc3BvbnNlLnN0YXR1cyA9PSA0MDQpIHsKICAgIE1lc3NhZ2UuZXJyb3IoewogICAgICBtZXNzYWdlOiAn5pyN5Yqh5Zmo6KKr5ZCD5LqGKCDila/ilqHilbAgKScKICAgIH0pOwogIH0gZWxzZSBpZiAoZXJyb3IucmVzcG9uc2Uuc3RhdHVzID09IDQwMykgewogICAgTWVzc2FnZS5lcnJvcih7CiAgICAgIG1lc3NhZ2U6ICfmnYPpmZDkuI3otrPvvIzor7fogZTns7vnrqHnkIblkZgnCiAgICB9KTsKICB9IGVsc2UgaWYgKGVycm9yLnJlc3BvbnNlLnN0YXR1cyA9PSA0MDEpIHsKICAgIC8qbXltZXNzYWdlLmVycm9yKHttZXNzYWdlOiBlcnJvci5yZXNwb25zZS5kYXRhLm1zZyA/IGVycm9yLnJlc3BvbnNlLmRhdGEubXNnIDogJ+WwmuacqueZu+W9le+8jOivt+eZu+W9lSd9KQogICAgcm91dGVyLnJlcGxhY2UoJy8nKTsqLwogICAgTWVzc2FnZS5lcnJvcih7CiAgICAgIG1lc3NhZ2U6ICLlsJrmnKrnmbvlvZXvvIzor7fnmbvlvZXvvIEiCiAgICB9KTsKICAgIHJvdXRlci5yZXBsYWNlKCcvJyk7CiAgfSBlbHNlIHsKICAgIGlmIChlcnJvci5yZXNwb25zZS5kYXRhLm1zZykgewogICAgICBNZXNzYWdlLmVycm9yKHsKICAgICAgICBtZXNzYWdlOiBlcnJvci5yZXNwb25zZS5kYXRhLm1zZwogICAgICB9KTsKICAgIH0gZWxzZSB7CiAgICAgIC8q6KGo56S65ZCO56uv5pyN5Yqh5Zmo5YWz6Zet77yM5rKh5pyJcmVzcG9uc2XvvIxDb3VsZCBub3QgZ2V0IGFueSByZXNwb25zZSovCiAgICAgIE1lc3NhZ2UuZXJyb3IoewogICAgICAgIG1lc3NhZ2U6ICfmnKrnn6XplJnor68hJwogICAgICB9KTsKICAgIH0KICB9CgogIHJldHVybjsKfSk7IC8v6K6+572u5LiA5Liq5YWo5bGA55qE5Y+Y6YeP5pa55L6/5L+u5pS5Cgp2YXIgYmFzZSA9ICcnOyAvL3Bvc3Tor7fmsYLvvIznmbvlvZXor7fmsYLkvb/nlKhrZXkgdmFsdWXkvKDlj4LvvIx1cmzor7fmsYLlnLDlnYDvvIxwYXJhbXPor7fmsYLnmoTlj4LmlbAKLy/lrprkuYnlroxwb3N06K+35rGC5LmL5ZCO77yM5bCx5Y+v5Lul5ZyoTG9naW4udnVl5Lit5L2/55So77yM5a+85YWlCi8v55m75b2V5piv5Y+q5pSv5oyBa2V5LHZhbHVl5Lyg5Y+C77yM5LiN6IO955SoanNvbuS8oO+8jHNwcmluZyBzZWN1cml0eem7mOiupOS4jeaUr+aMgWpzb27kvKDlj4IKCmV4cG9ydCB2YXIgcG9zdEtleVZhbHVlUmVxdWVzdCA9IGZ1bmN0aW9uIHBvc3RLZXlWYWx1ZVJlcXVlc3QodXJsLCBwYXJhbXMpIHsKICByZXR1cm4gYXhpb3MoewogICAgbWV0aG9kOiAncG9zdCcsCiAgICB1cmw6ICIiLmNvbmNhdChiYXNlKS5jb25jYXQodXJsKSwKICAgIGRhdGE6IHBhcmFtcywKICAgIC8v5oqKcGFyYW1z5Lyg5Yiw5LiL6Z2i55qEdHJhbnNmb3JtUmVxdWVzdOS4re+8jOWPmOaIkHJldD11c2VybmFtZT1qYXZhYm95JnBhc3N3b3JkPTEyMwogICAgdHJhbnNmb3JtUmVxdWVzdDogW2Z1bmN0aW9uIChkYXRhKSB7CiAgICAgIHZhciByZXQgPSAnJzsKCiAgICAgIGZvciAodmFyIGkgaW4gZGF0YSkgewogICAgICAgIHJldCArPSBlbmNvZGVVUklDb21wb25lbnQoaSkgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQoZGF0YVtpXSkgKyAnJic7CiAgICAgIH0KCiAgICAgIHJldHVybiByZXQ7CiAgICB9XSwKICAgIGhlYWRlcnM6IHsKICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnCiAgICB9CiAgfSk7Cn07IC8v6L+Z5LiqcG9zdOaYr+S8oOmAkmpzb27nmoRwb3N0CgpleHBvcnQgdmFyIHBvc3RSZXF1ZXN0ID0gZnVuY3Rpb24gcG9zdFJlcXVlc3QodXJsLCBwYXJhbXMpIHsKICByZXR1cm4gYXhpb3MoewogICAgbWV0aG9kOiAncG9zdCcsCiAgICB1cmw6ICIiLmNvbmNhdChiYXNlKS5jb25jYXQodXJsKSwKICAgIGRhdGE6IHBhcmFtcwogIH0pOwp9OwpleHBvcnQgdmFyIHB1dFJlcXVlc3QgPSBmdW5jdGlvbiBwdXRSZXF1ZXN0KHVybCwgcGFyYW1zKSB7CiAgcmV0dXJuIGF4aW9zKHsKICAgIG1ldGhvZDogJ3B1dCcsCiAgICB1cmw6ICIiLmNvbmNhdChiYXNlKS5jb25jYXQodXJsKSwKICAgIGRhdGE6IHBhcmFtcwogIH0pOwp9OwpleHBvcnQgdmFyIGdldFJlcXVlc3QgPSBmdW5jdGlvbiBnZXRSZXF1ZXN0KHVybCwgcGFyYW1zKSB7CiAgcmV0dXJuIGF4aW9zKHsKICAgIG1ldGhvZDogJ2dldCcsCiAgICB1cmw6ICIiLmNvbmNhdChiYXNlKS5jb25jYXQodXJsKSwKICAgIHBhcmFtczogcGFyYW1zCiAgfSk7Cn07CmV4cG9ydCB2YXIgZGVsZXRlUmVxdWVzdCA9IGZ1bmN0aW9uIGRlbGV0ZVJlcXVlc3QodXJsLCBwYXJhbXMpIHsKICByZXR1cm4gYXhpb3MoewogICAgbWV0aG9kOiAnZGVsZXRlJywKICAgIHVybDogIiIuY29uY2F0KGJhc2UpLmNvbmNhdCh1cmwpLAogICAgcGFyYW1zOiBwYXJhbXMKICB9KTsKfTs="},{"version":3,"sources":["/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/src/utils/api.js"],"names":["axios","Message","router","interceptors","response","use","success","status","data","error","message","msg","replace","base","postKeyValueRequest","url","params","method","transformRequest","ret","i","encodeURIComponent","headers","postRequest","putRequest","getRequest","deleteRequest"],"mappings":"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","sourcesContent":["import axios from 'axios';\n/*单独引用element-ui中的Message（见element-ui官网，及其用法）*/\nimport { Message } from 'element-ui';\nimport router from '../router'\n\n//axios中的响应拦截器，success和error是服务端响应的数据\n/*success不是服务端返回的数据，success.data才是服务端返回的json数据*/\n/*success.status是http的status，success.data.status是自定义的RespBean中的status*/\naxios.interceptors.response.use(success=>{\n    if(success.status && success.status==200 && success.data.status==500){\n        /*表示将RespBean中的msg显示出来*/\n        Message.error({message:success.data.msg})\n        return;\n    }\n    if(success.data.msg){\n        Message.success({message:success.data.msg})\n    }\n    return success.data;\n}, error => {\n    if (error.response.status == 504 || error.response.status == 404) {\n        Message.error({message: '服务器被吃了( ╯□╰ )'})\n    } else if (error.response.status == 403) {\n        Message.error({message: '权限不足，请联系管理员'})\n    } else if (error.response.status == 401) {\n        /*mymessage.error({message: error.response.data.msg ? error.response.data.msg : '尚未登录，请登录'})\n        router.replace('/');*/\n        Message.error({message:\"尚未登录，请登录！\"});\n        router.replace('/');\n    } else {\n        if (error.response.data.msg) {\n            Message.error({message: error.response.data.msg})\n        } else {\n            /*表示后端服务器关闭，没有response，Could not get any response*/\n            Message.error({message: '未知错误!'})\n        }\n    }\n    return;\n})\n//设置一个全局的变量方便修改\nlet base = '';\n\n//post请求，登录请求使用key value传参，url请求地址，params请求的参数\n//定义完post请求之后，就可以在Login.vue中使用，导入\n//登录是只支持key,value传参，不能用json传，spring security默认不支持json传参\nexport const postKeyValueRequest = (url, params) => {\n    return axios({\n        method: 'post',\n        url: `${base}${url}`,\n        data: params,\n        //把params传到下面的transformRequest中，变成ret=username=javaboy&password=123\n        transformRequest: [function (data) {\n            let ret = '';\n            for (let i in data) {\n                ret += encodeURIComponent(i) + '=' + encodeURIComponent(data[i]) + '&'\n            }\n            return ret;\n        }],\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        }\n    });\n}\n//这个post是传递json的post\nexport const postRequest = (url, params) => {\n    return axios({\n        method: 'post',\n        url: `${base}${url}`,\n        data: params\n    })\n}\nexport const putRequest = (url, params) => {\n    return axios({\n        method: 'put',\n        url: `${base}${url}`,\n        data: params\n    })\n}\nexport const getRequest = (url, params) => {\n    return axios({\n        method: 'get',\n        url: `${base}${url}`,\n        params: params\n    })\n}\nexport const deleteRequest = (url, params) => {\n    return axios({\n        method: 'delete',\n        url: `${base}${url}`,\n        params: params\n    })\n}\n"]}]}