{"remainingRequest":"D:\\vuehr\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vuehr\\src\\components\\sys\\basic\\DepMana.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vuehr\\src\\components\\sys\\basic\\DepMana.vue","mtime":1608452819073},{"path":"D:\\vuehr\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vuehr\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\vuehr\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vuehr\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIkRlcE1hbmEiLA0KICBkYXRhKCl7DQogICAgcmV0dXJuIHsNCiAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLA0KICAgICAgZmlsdGVyVGV4dDogJycsDQogICAgICBkZXA6IHsNCiAgICAgICAgbmFtZTogJycsDQogICAgICAgIHBhcmVudElkOiAtMQ0KICAgICAgfSwNCiAgICAgIHBuYW1lOiAnJywNCiAgICAgIGRlcHM6IFtdLA0KICAgICAgZGVmYXVsdFByb3BzOiB7DQogICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nLA0KICAgICAgICBsYWJlbDogJ25hbWUnDQogICAgICB9DQogICAgfQ0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMuaW5pdERlcHMoKTsNCiAgfSwNCiAgd2F0Y2g6ew0KICAgIC8q5b2T5pCc57Si5qGG5LitZmlsdGVyVGV4dOeahOWAvOWPkeeUn+WPmOWMlueahOaXtuWAme+8jOWwseS8muinpuWPkeS4i+mdoueahOaWueazlSovDQogICAgZmlsdGVyVGV4dCh2YWwpew0KICAgICAgdGhpcy4kcmVmcy50cmVlLmZpbHRlcih2YWwpOw0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczp7DQogICAgLyrmr4/mrKHmt7vliqDlrozlsLHmiormoYbkuK3mlbDmja7muIXnqboqLw0KICAgIGluaXREZXAoKSB7DQogICAgICB0aGlzLmRlcCA9IHsNCiAgICAgICAgbmFtZTogJycsDQogICAgICAgIHBhcmVudElkOiAtMQ0KICAgICAgfQ0KICAgICAgdGhpcy5wbmFtZSA9ICcnOw0KICAgIH0sDQogICAgYWRkRGVwVG9EZXBzKGRlcHMsIGRlcCkgew0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkZXBzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgIGxldCBkID0gZGVwc1tpXTsNCiAgICAgICAgaWYgKGQuaWQgPT0gZGVwLnBhcmVudElkKSB7DQogICAgICAgICAgZC5jaGlsZHJlbiA9IGQuY2hpbGRyZW4uY29uY2F0KGRlcCk7DQogICAgICAgICAgaWYgKGQuY2hpbGRyZW4ubGVuZ3RoID4gMCkgew0KICAgICAgICAgICAgZC5wYXJlbnQgPSB0cnVlOw0KICAgICAgICAgIH0NCiAgICAgICAgICByZXR1cm47DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy5hZGREZXBUb0RlcHMoZC5jaGlsZHJlbiwgZGVwKTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQogICAgZG9BZGREZXAoKSB7DQogICAgICB0aGlzLnBvc3RSZXF1ZXN0KCIvc3lzdGVtL2Jhc2ljL2RlcGFydG1lbnQvIiwgdGhpcy5kZXApLnRoZW4ocmVzcCA9PiB7DQogICAgICAgIGlmIChyZXNwKSB7DQogICAgICAgICAgLyrliqjmgIHlnLDlvoB0cmVl5Lit5re75Yqg5LiA5Liq5pWw5o2u77yM5re75Yqg5a6M5pW05LiqdHJlZeS4jeeUqOaUtui1t+adpSovDQogICAgICAgICAgdGhpcy5hZGREZXBUb0RlcHModGhpcy5kZXBzLCByZXNwLm9iaik7DQogICAgICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gZmFsc2U7DQoNCiAgICAgICAgICAvL+WIneWni+WMluWPmOmHj++8jOS9v+WvueivneahhmlucHV05qGG6YeM6Z2i5pWw5o2u5Li656m6DQogICAgICAgICAgdGhpcy5pbml0RGVwKCk7DQogICAgICAgIH0NCiAgICAgIH0pDQogICAgfSwNCiAgICByZW1vdmVEZXBGcm9tRGVwcyhwLGRlcHMsIGlkKSB7DQogICAgICBmb3IobGV0IGk9MDtpPGRlcHMubGVuZ3RoO2krKyl7DQogICAgICAgIGxldCBkID0gZGVwc1tpXTsNCiAgICAgICAgaWYgKGQuaWQgPT0gaWQpIHsNCiAgICAgICAgICBkZXBzLnNwbGljZShpLCAxKTsNCiAgICAgICAgICBpZiAoZGVwcy5sZW5ndGggPT0gMCkgew0KICAgICAgICAgICAgcC5wYXJlbnQgPSBmYWxzZTsNCiAgICAgICAgICB9DQogICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9ZWxzZXsNCiAgICAgICAgICB0aGlzLnJlbW92ZURlcEZyb21EZXBzKGQsZC5jaGlsZHJlbiwgaWQpOw0KICAgICAgICB9DQogICAgICB9DQogICAgfSwNCiAgICBkZWxldGVEZXAoZGF0YSkgew0KICAgICAgaWYgKGRhdGEucGFyZW50KSB7DQogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIueItumDqOmXqOWIoOmZpOWksei0pSIpOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgdGhpcy4kY29uZmlybSgn5q2k5pON5L2c5bCG5rC45LmF5Yig6Zmk44CQJyArIGRhdGEubmFtZSArICfjgJHpg6jpl6gsIOaYr+WQpue7p+e7rT8nLCAn5o+Q56S6Jywgew0KICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywNCiAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywNCiAgICAgICAgICB0eXBlOiAnd2FybmluZycNCiAgICAgICAgfSkudGhlbigoKSA9PiB7DQogICAgICAgICAgdGhpcy5kZWxldGVSZXF1ZXN0KCIvc3lzdGVtL2Jhc2ljL2RlcGFydG1lbnQvIitkYXRhLmlkKS50aGVuKHJlc3A9PnsNCiAgICAgICAgICAgIGlmIChyZXNwKSB7DQogICAgICAgICAgICAgIHRoaXMucmVtb3ZlRGVwRnJvbURlcHMobnVsbCx0aGlzLmRlcHMsZGF0YS5pZCk7DQogICAgICAgICAgICB9DQogICAgICAgICAgfSkNCiAgICAgICAgfSkuY2F0Y2goKCkgPT4gew0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uoew0KICAgICAgICAgICAgdHlwZTogJ2luZm8nLA0KICAgICAgICAgICAgbWVzc2FnZTogJ+W3suWPlua2iOWIoOmZpCcNCiAgICAgICAgICB9KTsNCiAgICAgICAgfSk7DQogICAgICB9DQogICAgfSwNCiAgICBzaG93QWRkRGVwVmlldyhkYXRhKSB7DQogICAgICB0aGlzLnBuYW1lID0gZGF0YS5uYW1lOw0KICAgICAgdGhpcy5kZXAucGFyZW50SWQgPSBkYXRhLmlkOw0KICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZTsNCiAgICB9LA0KICAgIC8qZGF0YeWwseaYr+WtmOeahOS4gOadoeadoeeahGpzb27lr7nosaHvvIx2YWx1ZeWwseaYr+aQnOe0ouahhueahOWGheWuuSovDQogICAgZmlsdGVyTm9kZSh2YWx1ZSwgZGF0YSkgew0KICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuIHRydWU7DQogICAgICByZXR1cm4gZGF0YS5uYW1lLmluZGV4T2YodmFsdWUpICE9PSAtMTsNCiAgICB9LA0KICAgIGluaXREZXBzKCl7DQogICAgICB0aGlzLmdldFJlcXVlc3QoIi9zeXN0ZW0vYmFzaWMvZGVwYXJ0bWVudC8iKS50aGVuKHJlc3AgPT4gew0KICAgICAgICBpZihyZXNwKXsNCiAgICAgICAgICB0aGlzLmRlcHMgPSByZXNwOw0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQogIH0NCn0NCg=="},{"version":3,"sources":["DepMana.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"DepMana.vue","sourceRoot":"src/components/sys/basic","sourcesContent":["<template>\r\n  <div style=\"width: 500px;\">\r\n      <el-input\r\n          placeholder=\"请输入部门名称进行搜索...\"\r\n          prefix-icon=\"el-icon-search\"\r\n          v-model=\"filterText\">\r\n      </el-input>\r\n\r\n<!--    :expand-on-click-node=\"false\"表示在添加部门或者删除部门的时候不会展开tree-->\r\n    <el-tree\r\n              style=\"margin-top: 10px\"\r\n              :data=\"deps\"\r\n              :props=\"defaultProps\"\r\n              :expand-on-click-node=\"false\"\r\n              :filter-node-method=\"filterNode\"\r\n              ref=\"tree\">\r\n      <span class=\"custom-tree-node\" style=\"display: flex;justify-content: space-between;width: 100%;\"\r\n          slot-scope=\"{ node, data }\">\r\n          <span>{{data.name }}</span>\r\n           <span>\r\n              <el-button\r\n                  type=\"primary\"\r\n                  size=\"mini\"\r\n                  class=\"depBtn\"\r\n                  @click=\"() => showAddDepView(data)\">\r\n                添加部门\r\n              </el-button>\r\n              <el-button\r\n                  type=\"danger\"\r\n                  size=\"mini\"\r\n                  class=\"depBtn\"\r\n                  @click=\"() => deleteDep(data)\">\r\n                删除部门\r\n              </el-button>\r\n          </span>\r\n      </span>\r\n    </el-tree>\r\n<!--    添加对话框-->\r\n    <el-dialog\r\n        title=\"添加部门\"\r\n        :visible.sync=\"dialogVisible\"\r\n        width=\"30%\">\r\n      <div>\r\n        <table>\r\n          <tr>\r\n            <td>\r\n              <el-tag>上级部门</el-tag>\r\n            </td>\r\n            <td>{{pname}}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <el-tag>部门名称</el-tag>\r\n            </td>\r\n            <td>\r\n              <el-input v-model=\"dep.name\" placeholder=\"请输入部门名称...\"></el-input>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"doAddDep\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"DepMana\",\r\n  data(){\r\n    return {\r\n      dialogVisible: false,\r\n      filterText: '',\r\n      dep: {\r\n        name: '',\r\n        parentId: -1\r\n      },\r\n      pname: '',\r\n      deps: [],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name'\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initDeps();\r\n  },\r\n  watch:{\r\n    /*当搜索框中filterText的值发生变化的时候，就会触发下面的方法*/\r\n    filterText(val){\r\n      this.$refs.tree.filter(val);\r\n    }\r\n  },\r\n  methods:{\r\n    /*每次添加完就把框中数据清空*/\r\n    initDep() {\r\n      this.dep = {\r\n        name: '',\r\n        parentId: -1\r\n      }\r\n      this.pname = '';\r\n    },\r\n    addDepToDeps(deps, dep) {\r\n      for (let i = 0; i < deps.length; i++) {\r\n        let d = deps[i];\r\n        if (d.id == dep.parentId) {\r\n          d.children = d.children.concat(dep);\r\n          if (d.children.length > 0) {\r\n            d.parent = true;\r\n          }\r\n          return;\r\n        } else {\r\n          this.addDepToDeps(d.children, dep);\r\n        }\r\n      }\r\n    },\r\n    doAddDep() {\r\n      this.postRequest(\"/system/basic/department/\", this.dep).then(resp => {\r\n        if (resp) {\r\n          /*动态地往tree中添加一个数据，添加完整个tree不用收起来*/\r\n          this.addDepToDeps(this.deps, resp.obj);\r\n          this.dialogVisible = false;\r\n\r\n          //初始化变量，使对话框input框里面数据为空\r\n          this.initDep();\r\n        }\r\n      })\r\n    },\r\n    removeDepFromDeps(p,deps, id) {\r\n      for(let i=0;i<deps.length;i++){\r\n        let d = deps[i];\r\n        if (d.id == id) {\r\n          deps.splice(i, 1);\r\n          if (deps.length == 0) {\r\n            p.parent = false;\r\n          }\r\n          return;\r\n        }else{\r\n          this.removeDepFromDeps(d,d.children, id);\r\n        }\r\n      }\r\n    },\r\n    deleteDep(data) {\r\n      if (data.parent) {\r\n        this.$message.error(\"父部门删除失败\");\r\n      } else {\r\n        this.$confirm('此操作将永久删除【' + data.name + '】部门, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.deleteRequest(\"/system/basic/department/\"+data.id).then(resp=>{\r\n            if (resp) {\r\n              this.removeDepFromDeps(null,this.deps,data.id);\r\n            }\r\n          })\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          });\r\n        });\r\n      }\r\n    },\r\n    showAddDepView(data) {\r\n      this.pname = data.name;\r\n      this.dep.parentId = data.id;\r\n      this.dialogVisible = true;\r\n    },\r\n    /*data就是存的一条条的json对象，value就是搜索框的内容*/\r\n    filterNode(value, data) {\r\n      if (!value) return true;\r\n      return data.name.indexOf(value) !== -1;\r\n    },\r\n    initDeps(){\r\n      this.getRequest(\"/system/basic/department/\").then(resp => {\r\n        if(resp){\r\n          this.deps = resp;\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.depBtn {\r\n  padding: 2px;\r\n}\r\n</style>"]}]}