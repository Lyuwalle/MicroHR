{"remainingRequest":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/src/views/emp/EmpBasic.vue?vue&type=template&id=42af3467&scoped=true&","dependencies":[{"path":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/src/views/emp/EmpBasic.vue","mtime":1625467519761},{"path":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}