{"remainingRequest":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/src/views/Login.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/src/views/Login.vue","mtime":1625467519760},{"path":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lyuxiyang/Documents/gitProject/microhr/vuehr/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubG9naW5Db250YWluZXIgewogICAgICBib3JkZXItcmFkaXVzOiAxNXB4OwogICAgICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OwogICAgICBtYXJnaW46IDE4MHB4IGF1dG87CiAgICAgIHdpZHRoOiAzNTBweDsKICAgICAgcGFkZGluZzogMTVweCAzNXB4IDE1cHggMzVweDsKICAgICAgYmFja2dyb3VuZDogI2ZmZjsKICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VhZWFlYTsKICAgICAgLyrooajnpLrpmLTlvbHmlYjmnpwqLwogICAgICBib3gtc2hhZG93OiAwIDAgMjVweCAjY2FjNmM2Owp9Ci5sb2dpblRpdGxlIHsKICAgIG1hcmdpbjogMTVweCBhdXRvIDIwcHggYXV0bzsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGNvbG9yOiAjMDIxYTMyOwp9Ci5sb2dpblJlbWVtYmVyIHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbjogMHB4IDBweCAxNXB4IDBweDsKICBjb2xvcjogIzAyMWEzMjsKfQovKuS4i+mdoueahGNsYXNz5piv5Zyo572R6aG156uv5qOA5p+l5Yiw55qE77yM55u05o6l5aSN5Yi26L+H5p2l55qEKi8KLmVsLWZvcm0taXRlbV9fY29udGVudHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<!--  loginForm是form表单中的数据对象-->\n<!-- ref=\"loginForm\"表示通过loginForm可以去查找到表单的名字 -->\n  <el-form\n      v-loading=\"loading\"\n      element-loading-text=\"拼命登录中...\"\n      element-loading-spinner=\"el-icon-loading\"\n      element-loading-background=\"rgba(0, 0, 0, 0.8)\"\n      :rules=\"rules\"\n      ref=\"loginForm\"\n      :model=\"loginForm\"\n      class=\"loginContainer\">\n    <h3 class=\"loginTitle\">系统登录</h3>\n    <el-form-item prop=\"username\">\n      <el-input type=\"text\" v-model=\"loginForm.username\" auto-complete=\"off\" placeholder=\"请输入用户名\"></el-input>\n    </el-form-item>\n    <el-form-item prop=\"password\">\n      <el-input type=\"text\" v-model=\"loginForm.password\" auto-complete=\"off\" placeholder=\"请输入密码\"></el-input>\n    </el-form-item>\n<!--    验证码-->\n    <el-form-item prop=\"code\">\n      <el-input type=\"text\" v-model=\"loginForm.code\" auto-complete=\"off\" placeholder=\"点击图片更换验证码\"\n                @keydown.enter.native=\"submitLogin\" style=\"width: 250px\"></el-input>\n<!--      图片-->\n      <img :src=\"verifyCodeUrl\" @click=\"updateVerifyCode\" alt=\"\">\n    </el-form-item>\n    <el-checkbox class=\"loginRemember\" v-model=\"checked\">记住我</el-checkbox>\n<!--    点击登录会执行这个方法submitLogin，校验用户名和密码-->\n    <el-button type=\"primary\" style=\"width:100%\" @click=\"submitLogin\">登录</el-button>\n  </el-form>\n</template>\n\n<script>\n\nexport default {\n  name: \"Login\",\n  data(){\n    /*给verifyCodeUrl加一个时间戳，这样每次生成的地址都是不一样的*/\n    return {\n      verifyCodeUrl:'/verifyCode?time='+new Date(),\n      loading:false,\n      loginForm:{\n        username:'admin',\n        password:'123',\n        code:''\n      },\n      checked: true,\n      rules:{\n        username:[{required:true, message:'请输入用户名', trigger:'blur'}],\n        password:[{required:true, message:'密码不能为空', trigger:'blur'}],\n        code:[{required:true, message:'请输入验证码', trigger:'blur'}]\n      }\n    }\n  },\n  methods:{\n    updateVerifyCode(){\n      this.verifyCodeUrl='/verifyCode?time='+new Date()\n    },\n    submitLogin(){\n\n      /*this.$refs表示会获取到当前页面的所有的refs,*/\n      this.$refs.loginForm.validate((valid) => {\n        if(valid){\n          /*加载进度条*/\n          this.loading = true;\n          /*这个resp就是服务端返回的数据，成功返回success.data，失败返回null并提示信息*/\n          this.postKeyValueRequest('/doLogin', this.loginForm).then(resp => {\n            /*关闭进度条*/\n            this.loading = false;\n            if(resp){\n              //alert('b');\n              /*登录成功之后弹出RespBean的ok信息，RespBean中的obj就是用户的json信息*/\n              //alert(JSON.stringify(resp));\n              /*登录成功的用户保存在window.sessionStorage里面，打开页面再关闭这个resp.obj用户信息就没有了*/\n              window.sessionStorage.setItem(\"user\", JSON.stringify(resp.obj));\n              /*this.$router表示获取到router,replace表示跳转到home页之后就不再回到登录页面了*/\n              let path = this.$route.query.redirect;\n              this.$router.replace((path == '/' || path == undefined) ? '/home' : path);\n            }else{\n              /*登录失败刷新验证码*/\n              this.verifyCodeUrl='/verifyCode?time='+new Date()\n            }\n          })\n        }else{\n          /*element-ui中的消息提示*/\n          this.$message.error('请输入所有信息！');\n          return false;\n        }\n      });\n    }\n  }\n}\n</script>\n\n<style>\n.loginContainer {\n      border-radius: 15px;\n      background-clip: padding-box;\n      margin: 180px auto;\n      width: 350px;\n      padding: 15px 35px 15px 35px;\n      background: #fff;\n      border: 1px solid #eaeaea;\n      /*表示阴影效果*/\n      box-shadow: 0 0 25px #cac6c6;\n}\n.loginTitle {\n    margin: 15px auto 20px auto;\n    text-align: center;\n    color: #021a32;\n}\n.loginRemember {\n  text-align: left;\n  margin: 0px 0px 15px 0px;\n  color: #021a32;\n}\n/*下面的class是在网页端检查到的，直接复制过来的*/\n.el-form-item__content{\n  display: flex;\n  align-items: center;\n}\n</style>"]}]}